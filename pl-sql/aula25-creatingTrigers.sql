------------------------------------------------------------------------------------------------------------
---creating packages
------------------------------------------------------------------------------------------
--
-- USED TO GROUP  VARIABLES,PRCEDURES FUNCTIONS, CURSORS, ETC
--  ADVANTAGES:
-- 1) MODULARITY AND ENCAPSULATION
-- 2) EASIER APPLICATION DESIGN
-- 3) BETTER PERFORMANCE: ORACLE PUT MULTIPLE OBJECT IN MEMORY AT ONCE
-- 4) EASIER SECURITY ACCESS OF OBJECTS

-- PACKAGES ARE DIVIDED IN TWO PARTS:
-- A) SPECIFICATION (LIKE AN INTERFACE IN OOP)
-- B) BODY (LIKE AN IMPLEMENTATION IN OOP)

-- A) PACKAGE SPECIFICATION
-- USED TO DECLARE PUBLIC VARIABLES AND OTHERS SUBPROGRAM´S SPECIFICATIONS
-- DOES NOT CONTAIN IMPLEMENTATION CODE
-- SEPARATES THE LOGIC FROM THE INTERFACE
-- CAN BE CREATED WITHOUT A PACKAGE BODY

-- SYNTAX:

CREATE [OR REPLACE] PACKAGE <name>
IS | AS
<PUBLIC TYPES>
<PUBLIC VARIABLES>
<SUBPROGRAMS SPECIFICATIONS>
...
END <NAME>;

-- EXAMPLE 1
CREATE OR REPLACE PACKAGE PCK_1
IS
  g_PI CONSTANT NUMBER := 3.1415;

  PROCEDURE PROC_CALC (X NUMBER);
  FUNCTION F_MATH     (X IN NUMBER, Y IN NUMBER) RETURN INT;
END PCK_1;

-- EXAMPLE 2: CREATING OVERLOADS

CREATE OR REPLACE PACKAGE PCK_2
AS
  g_PI NUMBER:=3.1415;

  PROCEDURE PROC_CALC  (X IN NUMBER);
  PROCEDURE PROC_CALC  (X IN NUMBER, Y OUT NUMBER);

  FUNCTION F_MATH      (X NUMBER) RETURN INT;
  FUNCTION F_MATH      (X NUMBER, Y NUMBER) RETURN INT;

END PCK_2;
---------------------------
-- DROP PACKAGE

DROP PACKAGE PCK_1;
DROP PACKAGE PCK_2;

-------------------------
-- B) PACKAGE BODY
-- CONTAINS THE SUBPROGRAMS´S DEFINITIONS
-- HOSTS THE LOGIC (IMPLEMANTATION) OF THE SUBPROGRAMS
-- CAN HAVE PRIVATE VARIABLES
-- REQUIRE A PACKAGE SPECIFICATION
-- INITIALIZE VARIABLE WITH A ONE-TIME PROCEDURE
-- REQUIRE FOWARD DECLARATION (ORDER OF SUBPROGRAMS)

-- SYNTAX:
CREATE [OR REPLACE] PACKAGE BODY <NAME>
IS  |  AS
 <private types>
 <private variables> 
 <private bodies>
...
END <name>

--EXAMPLE 1: SIMPLE PACKAGE
 CREATE OR REPLACE PACKAGE PCK_A
IS
  PROCEDURE PROC_CALC( X IN NUMBER);
END PCK_A

-----------

CREATE OR REPLACE PACKAGE BODY PCK_A
IS
    PROCEDURE PROC_CALC(X IN NUMBER)
    IS
    BEGIN
     DBMS_OUTPUT.PUT_LINE('X: '|| X*2);
    END;
END PCK_A;

--EXECUTION

BEGIN
  PCK_A.PROC_CALC(10);
END;

-------------
-- EXAMPLE 2 - OVERLOAD

DROP PACKAGE PCKB;
DROP PACKAGE BODY PCKB;

CREATE OR REPLACE PACKAGE PCKB
IS 
  PROCEDURE PROC_CALC(X IN NUMBER);
  PROCEDURE PROC_CALC(X IN NUMBER, Y IN NUMBER);
END PCKB;

CREATE OR REPLACE PACKAGE BODY PCKB
IS
 PROCEDURE PROC_CALC(X IN NUMBER)
 IS
    BEGIN
     DBMS_OUTPUT.PUT_LINE('X: ' || X*2);
    END;

 PROCEDURE PROC_CALC(X IN NUMBER,Y IN NUMBER)
 IS
  BEGIN
    DBMS_OUTPUT.PUT_LINE(' X*Y = ' || X*Y);
  END;
END PCKB;
-----
-- EXECUTE
BEGIN 
  PCKB.PROC_CALC(9);
  PCKB.PROC_CALC(9,3);
END;

-- EXAMPLE 3 : INICIALIZE VARIABLE WITH A ONE-TIME PROCEDURE
DROP PCKC;

CREATE OR REPLACE PACKAGE PCKC
IS 
  S_VALUE NUMBER;
END PCKC;

CREATE OR REPLACE PACKAGE BODY PCKC
AS 
 BEGIN
  SELECT SALARY INTO S_VALUE
      FROM EMPLOYEES
          WHERE EMPLOYEE_ID =176;
END PCKC;
-------------------
--
--EXECUTE
BEGIN
  DBMS_OUTPUT.PUT_LINE('Salary: '|| PCKC.s_value);
end;

--- DROP PACKAGE

DROP PACKAGE BODY PCK_A;
DROP PACKAGE PCK_A;

DROP PACKAGE BODY PCKB;
DROP PACKAGE PCKB;

DROP PACKAGE BODY PCKC;
DROP PACKAGE PCKC;



